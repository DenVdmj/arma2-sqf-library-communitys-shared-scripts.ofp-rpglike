НПС И ИХ ДИАЛОГИ
Неписи регистрируются в файле "NPC\registry.sqf":
---sqf---
// Имя объекта NPC, файл с разговорами, путь задается относительно папки "NPC\Conversation\<LANG>\"
// <LANG> -- язык вашей локализации
[Object_AnyNPC, "AnyNPCFolder\ConversationFile.sqf"],

// Можно зарегиститровать сразу всю группу члены которой будут использовать один файл разговоров:
[Group_GroupOfNPC, "GroupOfNPCFolder\ConversationFile.sqf"],

// Можно зарегиститровать сразу всех юнитов находящихся на территории
// триггера, все они будут использовать один файл разговоров:
[TRIG_AnyLocationName, "AnyLocationName\ConversationFile.sqf"]
--------
Кстати, не забывайте, что Вы можете поставить триггер с активацией
на кого угодно, на сторону, или на конкретную группу ботов

Пример файла разговора:
---sqf---
// подключить макросы (тербуется аддон rls, но он вообще требуется)
#include "rls\macro"

[
    // начало фрейма
    "вход", // имя фрейма
    {
        // setAve - макро которое меняет начальный фрейм непися,
        // теперь, при следующем посещении непися мы будем
        // попадать в фрейм "вход. знакомы"
        setAve("вход. знакомы");
        [   // текст непися, строка или массив, если массив, то он выводится в несколько экранов
            "Привет!",
            [ // кнопки ответов
                // "текст", "имя фрейма куда осуществляется переход"
                // При выборе этого ответа будет осуществлен выход из разговора
                ["Пока", "[exit]"],
                // При выборе этого ответа будет осуществлен переход к фрейму "время"
                ["Не подскажете время?", "время"],
                // При выборе этого ответа будет открыто окно торговли
                ["Торговать", "[trade]"]
            ]
        ]
    },
    // конец фрейма
    // еще один фрейм
    "вход. знакомы",
    {
        [
            "Это снова ты?",
            [
                ["Пока", "[exit]"],
                ["Время не подскажете?", "время"],
                ["Торговать", "[trade]"]
            ]
        ]
    },
    "время",
    {
        [
            // подставляется значение, которое вернула функция funcGetTimeInHumanFormat
            "Сейчас " + (dayTime call funcGetTimeInHumanFormat),
            [
                ["Пока", "[exit]"],
                ["Торговать", "[trade]"]
            ]
        ]
    }
]
-------------------------------
ДОСТУПНЫЕ МАКРО

    setAve(frame)
    Меняет начальный фрейм (фрейм приветствия),
    таким образом, при следующем разговоре, непись произнесет другую фразу приветствия.

    setAveFile(file,frame)
    Устанавливает другой файл разговоров. По сути, то же самое что и setAve,
    только новый фрейм может находится в другом файле

    setBye
    Устанавливает код который будет выполнен при закрытии диалога, обратите внимание на другой тип синтаксиса:
    ---sqf---
        { hint "Пока-пока!" } setBye
    ---------

    addFlag(flag)
    Устанавливает метку-флаг в память непися, например:
    ---sqf---
        addFlag("непись обиделся")
    ---------
    delFlag(flag)
    Удаляет метку-флаг из памяти непися, например:
    ---sqf---
        delFlag("непись обиделся")
    ---------
    isFlag(f)
    Проверяет наличие метки-флага в памяти непися, например:
    ---sqf---
        if ( isFlag("непись обиделся") ) then {

        }
    ---------
    setTrade
    Устанавливает собственную функцию торговли, см. как написан _openTradeDialog, использование:
    ---sqf---
        {
            // своя функция торговли
        } setTrade
    ---------

    setVar
    Записывает переменную в память непися:
    ---sqf---
        [имя, значение] setVar
    ---------

    getVar
    Читает переменную из памяти непися:
    ---sqf---
        [имя, значение по умолчанию] setVar
    ---------

    delVar
    Удаляет переменные из памяти непися:
    ---sqf---
        [список имен переменных] delVar
    ---------
